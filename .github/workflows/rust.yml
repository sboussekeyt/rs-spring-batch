name: test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Check
      run: cargo check --all-targets --all-features

  clippy:
    name: Clippy
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy
      - run: cargo clippy --all --all-features -- -D warnings

  rustfmt:
    name: Rustfmt
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt
      - run: cargo fmt --all -- --check

  test:
    name: Test
    needs: check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: nightly
        override: true

    - name: Install grcov
      run: |
        rustup component add llvm-tools-preview
        cargo install grcov
      
    - name: Run tests
      run: cargo test --all-features
      env:
        RUSTFLAGS: "-Cinstrument-coverage"

    - name: Create coverage report
      run: |
        grcov . \
            --binary-path ./target/debug/deps/ \
            --source-dir . \
            --excl-start 'mod test* \{' \
            --ignore '*test*' \
            --ignore "*test.rs" \
            --ignore "*main.rs" \
            --ignore "*steps.rs" \
            --ignore "*tests.rs" \
            --ignore "*github.com*" \
            --ignore "*libcore*" \
            --ignore "*rustc*" \
            --ignore "*liballoc*" \
            --ignore "*cargo*" \
            -t coveralls+ \
            --token ? \
            -o ./cov_normal.json

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        files: cov_normal.json
        verbose: true
        fail_ci_if_error: true

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose
